<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>Weather App</h1>
        <div class="weather">
            <input type="text" id="city" placeholder="Enter city name">
            <button id="fetchWeather">Get Weather</button>
            <div id="weatherInfo">
                <!-- Weather data will be displayed here -->
            </div>
        </div>
    </div>

    <script src="script.js"></script>
</body>
</html>
[11:20, 6/5/2024] Sreya @july7: body {
    margin: 0;
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.container {
    background-color: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    text-align: center;
}

.weather {
    margin-top: 20px;
}

#city {
    padding: 10px;
    font-size: 16px;
    width: 200px;
}

#fetchWeather {
    padding: 10px 20px;
    font-size: 16px;
    background-color: #007BFF;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-left: 10px;
}

#fetchWeather:hover {
    background-color: #0056b3;
}

#weatherInfo {
    margin-top: 20px;
    font-size: 18px;
}
document.getElementById('fetchWeather').addEventListener('click', function() {
    const city = document.getElementById('city').value;
    const apiKey = 'YOUR_API_KEY'; // Replace with your OpenWeatherMap API key
    const apiUrl = https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric;

    fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
            const weatherInfo = document.getElementById('weatherInfo');
            if (data.cod === 200) {
                weatherInfo.innerHTML = `
                    <p><strong>City:</strong> ${data.name}</p>
                    <p><strong>Temperature:</strong> ${data.main.temp} °C</p>
                    <p><strong>Weather:</strong> ${data.weather[0].des…
Building a weather website involves using HTML for structure, CSS for styling, and JavaScript for fetching data from a weather API and updating the webpage dynamically. Below is an example of how you can create a simple weather website using the OpenWeatherMap API.

### HTML Code (index.html)
html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>Weather App</h1>
        <div class="weather">
            <input type="text" id="city" placeholder="Enter city name">
            <button id="fetchWeather">Get Weather</button>
            <div id="weatherInfo">
                <!-- Weather data will be displayed here -->
            </div>
        </div>
    </div>

    <script src="script.js"></script>
</body>
</html>


### CSS Code (styles.css)
css
body {
    margin: 0;
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.container {
    background-color: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    text-align: center;
}

.weather {
    margin-top: 20px;
}

#city {
    padding: 10px;
    font-size: 16px;
    width: 200px;
}

#fetchWeather {
    padding: 10px 20px;
    font-size: 16px;
    background-color: #007BFF;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-left: 10px;
}

#fetchWeather:hover {
    background-color: #0056b3;
}

#weatherInfo {
    margin-top: 20px;
    font-size: 18px;
}


### JavaScript Code (script.js)
javascript
document.getElementById('fetchWeather').addEventListener('click', function() {
    const city = document.getElementById('city').value;
    const apiKey = 'YOUR_API_KEY'; // Replace with your OpenWeatherMap API key
    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;

    fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
            const weatherInfo = document.getElementById('weatherInfo');
            if (data.cod === 200) {
                weatherInfo.innerHTML = `
                    <p><strong>City:</strong> ${data.name}</p>
                    <p><strong>Temperature:</strong> ${data.main.temp} °C</p>
                    <p><strong>Weather:</strong> ${data.weather[0].description}</p>
                    <p><strong>Humidity:</strong> ${data.main.humidity} %</p>
                    <p><strong>Wind Speed:</strong> ${data.wind.speed} m/s</p>
                `;
            } else {
                weatherInfo.innerHTML = `<p>${data.message}</p>`;
            }
        })
        .catch(error => {
            console.error('Error fetching weather data:', error);
            document.getElementById('weatherInfo').innerHTML = `<p>Error fetching weather data</p>`;
        });
});


### Steps to Run the Website
1. *Get an API Key*: Sign up on [OpenWeatherMap](https://openweathermap.org/api) to get a free API key.
2. *Replace API Key*: Replace YOUR_API_KEY in the JavaScript code with your actual API key.
3. *Save the Files*: Save the HTML, CSS, and JavaScript code in their respective files (index.html, styles.css, and script.js).
4. *Open the HTML File*: Open index.html in your web browser to view and use the weather app.

This setup will allow you to enter a city name and fetch the current weather conditions from the OpenWeatherMap API, displaying the information on the webpage.
